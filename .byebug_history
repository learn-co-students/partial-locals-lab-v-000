exit
exi
student.name.downcase.match(search.downcase)
student.name
student.name.match(search)
student
n
student.name.match(search)
search
student
exit
xit
@results
exit
s
search
exit
âˆš
@results
Student.all.each{|s| @results << s if s.name.match(search)}
@results = []
Student.first.name.match(t)
t = "ob"
Student.first.name.match("ob")
Student.first
search
exit
Student.where("LOWER(name) LIKE ?", "ob".to_sym)
Student.where("LOWER(name) LIKE ?", "ob")
Student.where("LOWER(name) LIKE ?", ob)
Student.where("LOWER(name) LIKE ob")
Student.where("LOWER(name) LIKE 'ob'")
Student.where("LOWER(name) LIKE ?", search)
search.blank?
search
exit
n
search.blank?
